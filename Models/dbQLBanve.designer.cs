#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnMonHoc.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBanve")]
	public partial class dbQLBanveDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertCHITIETDONHANG(CHITIETDONHANG instance);
    partial void UpdateCHITIETDONHANG(CHITIETDONHANG instance);
    partial void DeleteCHITIETDONHANG(CHITIETDONHANG instance);
    partial void InsertCHUDE(CHUDE instance);
    partial void UpdateCHUDE(CHUDE instance);
    partial void DeleteCHUDE(CHUDE instance);
    partial void InsertDONDATHANG(DONDATHANG instance);
    partial void UpdateDONDATHANG(DONDATHANG instance);
    partial void DeleteDONDATHANG(DONDATHANG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertPHIM(PHIM instance);
    partial void UpdatePHIM(PHIM instance);
    partial void DeletePHIM(PHIM instance);
    #endregion
		
		public dbQLBanveDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLBanveConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanveDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanveDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanveDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanveDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<CHUDE> CHUDEs
		{
			get
			{
				return this.GetTable<CHUDE>();
			}
		}
		
		public System.Data.Linq.Table<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this.GetTable<DONDATHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<PHIM> PHIMs
		{
			get
			{
				return this.GetTable<PHIM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserAdmin;
		
		private string _PassAdmin;
		
		private string _Hoten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnPassAdminChanging(string value);
    partial void OnPassAdminChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PassAdmin
		{
			get
			{
				return this._PassAdmin;
			}
			set
			{
				if ((this._PassAdmin != value))
				{
					this.OnPassAdminChanging(value);
					this.SendPropertyChanging();
					this._PassAdmin = value;
					this.SendPropertyChanged("PassAdmin");
					this.OnPassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONHANG")]
	public partial class CHITIETDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADONHANG;
		
		private int _MAPHIM;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<decimal> _DONGIA;
		
		private EntityRef<DONDATHANG> _DONDATHANG;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADONHANGChanging(int value);
    partial void OnMADONHANGChanged();
    partial void OnMAPHIMChanging(int value);
    partial void OnMAPHIMChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<decimal> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CHITIETDONHANG()
		{
			this._DONDATHANG = default(EntityRef<DONDATHANG>);
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADONHANG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADONHANG
		{
			get
			{
				return this._MADONHANG;
			}
			set
			{
				if ((this._MADONHANG != value))
				{
					if (this._DONDATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADONHANGChanging(value);
					this.SendPropertyChanging();
					this._MADONHANG = value;
					this.SendPropertyChanged("MADONHANG");
					this.OnMADONHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPHIM
		{
			get
			{
				return this._MAPHIM;
			}
			set
			{
				if ((this._MAPHIM != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIMChanging(value);
					this.SendPropertyChanging();
					this._MAPHIM = value;
					this.SendPropertyChanged("MAPHIM");
					this.OnMAPHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CHITIETDONHANG", Storage="_DONDATHANG", ThisKey="MADONHANG", OtherKey="MADONHANG", IsForeignKey=true)]
		public DONDATHANG DONDATHANG
		{
			get
			{
				return this._DONDATHANG.Entity;
			}
			set
			{
				DONDATHANG previousValue = this._DONDATHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONDATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONDATHANG.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._DONDATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MADONHANG = value.MADONHANG;
					}
					else
					{
						this._MADONHANG = default(int);
					}
					this.SendPropertyChanged("DONDATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_CHITIETDONHANG", Storage="_PHIM", ThisKey="MAPHIM", OtherKey="MAPHIM", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MAPHIM = value.MAPHIM;
					}
					else
					{
						this._MAPHIM = default(int);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUDE")]
	public partial class CHUDE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MACD;
		
		private string _TENCHUDE;
		
		private EntitySet<PHIM> _PHIMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACDChanging(int value);
    partial void OnMACDChanged();
    partial void OnTENCHUDEChanging(string value);
    partial void OnTENCHUDEChanged();
    #endregion
		
		public CHUDE()
		{
			this._PHIMs = new EntitySet<PHIM>(new Action<PHIM>(this.attach_PHIMs), new Action<PHIM>(this.detach_PHIMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MACD
		{
			get
			{
				return this._MACD;
			}
			set
			{
				if ((this._MACD != value))
				{
					this.OnMACDChanging(value);
					this.SendPropertyChanging();
					this._MACD = value;
					this.SendPropertyChanged("MACD");
					this.OnMACDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHUDE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENCHUDE
		{
			get
			{
				return this._TENCHUDE;
			}
			set
			{
				if ((this._TENCHUDE != value))
				{
					this.OnTENCHUDEChanging(value);
					this.SendPropertyChanging();
					this._TENCHUDE = value;
					this.SendPropertyChanged("TENCHUDE");
					this.OnTENCHUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUDE_PHIM", Storage="_PHIMs", ThisKey="MACD", OtherKey="MACD")]
		public EntitySet<PHIM> PHIMs
		{
			get
			{
				return this._PHIMs;
			}
			set
			{
				this._PHIMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.CHUDE = this;
		}
		
		private void detach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.CHUDE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONDATHANG")]
	public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADONHANG;
		
		private System.Nullable<bool> _DATHANHTOAN;
		
		private System.Nullable<bool> _TINHTRANGDONHANG;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private System.Nullable<int> _MAKH;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADONHANGChanging(int value);
    partial void OnMADONHANGChanged();
    partial void OnDATHANHTOANChanging(System.Nullable<bool> value);
    partial void OnDATHANHTOANChanged();
    partial void OnTINHTRANGDONHANGChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGDONHANGChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    #endregion
		
		public DONDATHANG()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADONHANG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADONHANG
		{
			get
			{
				return this._MADONHANG;
			}
			set
			{
				if ((this._MADONHANG != value))
				{
					this.OnMADONHANGChanging(value);
					this.SendPropertyChanging();
					this._MADONHANG = value;
					this.SendPropertyChanged("MADONHANG");
					this.OnMADONHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATHANHTOAN", DbType="Bit")]
		public System.Nullable<bool> DATHANHTOAN
		{
			get
			{
				return this._DATHANHTOAN;
			}
			set
			{
				if ((this._DATHANHTOAN != value))
				{
					this.OnDATHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._DATHANHTOAN = value;
					this.SendPropertyChanged("DATHANHTOAN");
					this.OnDATHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANGDONHANG", DbType="Bit")]
		public System.Nullable<bool> TINHTRANGDONHANG
		{
			get
			{
				return this._TINHTRANGDONHANG;
			}
			set
			{
				if ((this._TINHTRANGDONHANG != value))
				{
					this.OnTINHTRANGDONHANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANGDONHANG = value;
					this.SendPropertyChanged("TINHTRANGDONHANG");
					this.OnTINHTRANGDONHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MADONHANG", OtherKey="MADONHANG")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDATHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONDATHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONDATHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _HoTen;
		
		private string _Taikhoan;
		
		private string _MATKHAU;
		
		private string _EMAIL;
		
		private string _DIACHIKH;
		
		private string _DIENTHOAIKH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private EntitySet<DONDATHANG> _DONDATHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTaikhoanChanging(string value);
    partial void OnTaikhoanChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDIACHIKHChanging(string value);
    partial void OnDIACHIKHChanged();
    partial void OnDIENTHOAIKHChanging(string value);
    partial void OnDIENTHOAIKHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taikhoan", DbType="VarChar(50)")]
		public string Taikhoan
		{
			get
			{
				return this._Taikhoan;
			}
			set
			{
				if ((this._Taikhoan != value))
				{
					this.OnTaikhoanChanging(value);
					this.SendPropertyChanging();
					this._Taikhoan = value;
					this.SendPropertyChanged("Taikhoan");
					this.OnTaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHIKH", DbType="NVarChar(200)")]
		public string DIACHIKH
		{
			get
			{
				return this._DIACHIKH;
			}
			set
			{
				if ((this._DIACHIKH != value))
				{
					this.OnDIACHIKHChanging(value);
					this.SendPropertyChanging();
					this._DIACHIKH = value;
					this.SendPropertyChanged("DIACHIKH");
					this.OnDIACHIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAIKH", DbType="VarChar(50)")]
		public string DIENTHOAIKH
		{
			get
			{
				return this._DIENTHOAIKH;
			}
			set
			{
				if ((this._DIENTHOAIKH != value))
				{
					this.OnDIENTHOAIKHChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAIKH = value;
					this.SendPropertyChanged("DIENTHOAIKH");
					this.OnDIENTHOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this._DONDATHANGs;
			}
			set
			{
				this._DONDATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKHUYENMAI;
		
		private System.Nullable<int> _MAPHIM;
		
		private string _TENKHUYENMAI;
		
		private string _THANKHUYENMAI;
		
		private string _ANHKHUYENMAI;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHUYENMAIChanging(int value);
    partial void OnMAKHUYENMAIChanged();
    partial void OnMAPHIMChanging(System.Nullable<int> value);
    partial void OnMAPHIMChanged();
    partial void OnTENKHUYENMAIChanging(string value);
    partial void OnTENKHUYENMAIChanged();
    partial void OnTHANKHUYENMAIChanging(string value);
    partial void OnTHANKHUYENMAIChanged();
    partial void OnANHKHUYENMAIChanging(string value);
    partial void OnANHKHUYENMAIChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHUYENMAI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKHUYENMAI
		{
			get
			{
				return this._MAKHUYENMAI;
			}
			set
			{
				if ((this._MAKHUYENMAI != value))
				{
					this.OnMAKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._MAKHUYENMAI = value;
					this.SendPropertyChanged("MAKHUYENMAI");
					this.OnMAKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIM", DbType="Int")]
		public System.Nullable<int> MAPHIM
		{
			get
			{
				return this._MAPHIM;
			}
			set
			{
				if ((this._MAPHIM != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIMChanging(value);
					this.SendPropertyChanging();
					this._MAPHIM = value;
					this.SendPropertyChanged("MAPHIM");
					this.OnMAPHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHUYENMAI", DbType="NVarChar(MAX)")]
		public string TENKHUYENMAI
		{
			get
			{
				return this._TENKHUYENMAI;
			}
			set
			{
				if ((this._TENKHUYENMAI != value))
				{
					this.OnTENKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._TENKHUYENMAI = value;
					this.SendPropertyChanged("TENKHUYENMAI");
					this.OnTENKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANKHUYENMAI", DbType="NVarChar(MAX)")]
		public string THANKHUYENMAI
		{
			get
			{
				return this._THANKHUYENMAI;
			}
			set
			{
				if ((this._THANKHUYENMAI != value))
				{
					this.OnTHANKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._THANKHUYENMAI = value;
					this.SendPropertyChanged("THANKHUYENMAI");
					this.OnTHANKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHKHUYENMAI", DbType="NVarChar(50)")]
		public string ANHKHUYENMAI
		{
			get
			{
				return this._ANHKHUYENMAI;
			}
			set
			{
				if ((this._ANHKHUYENMAI != value))
				{
					this.OnANHKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._ANHKHUYENMAI = value;
					this.SendPropertyChanged("ANHKHUYENMAI");
					this.OnANHKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_KHUYENMAI", Storage="_PHIM", ThisKey="MAPHIM", OtherKey="MAPHIM", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.KHUYENMAIs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.KHUYENMAIs.Add(this);
						this._MAPHIM = value.MAPHIM;
					}
					else
					{
						this._MAPHIM = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIM")]
	public partial class PHIM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHIM;
		
		private string _TENPHIM;
		
		private string _TENPHU;
		
		private System.Nullable<decimal> _GIABAN;
		
		private string _MOTA;
		
		private string _NSX;
		
		private string _DAODIEN;
		
		private string _QUOCGIA;
		
		private string _ANHBIA;
		
		private string _ANHPHU;
		
		private System.Nullable<System.DateTime> _NGAYCAPNHAT;
		
		private System.Nullable<int> _SOLUONGTON;
		
		private System.Nullable<int> _MACD;
		
		private string _TENCHUDE;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntitySet<KHUYENMAI> _KHUYENMAIs;
		
		private EntityRef<CHUDE> _CHUDE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIMChanging(int value);
    partial void OnMAPHIMChanged();
    partial void OnTENPHIMChanging(string value);
    partial void OnTENPHIMChanged();
    partial void OnTENPHUChanging(string value);
    partial void OnTENPHUChanged();
    partial void OnGIABANChanging(System.Nullable<decimal> value);
    partial void OnGIABANChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnNSXChanging(string value);
    partial void OnNSXChanged();
    partial void OnDAODIENChanging(string value);
    partial void OnDAODIENChanged();
    partial void OnQUOCGIAChanging(string value);
    partial void OnQUOCGIAChanged();
    partial void OnANHBIAChanging(string value);
    partial void OnANHBIAChanged();
    partial void OnANHPHUChanging(string value);
    partial void OnANHPHUChanged();
    partial void OnNGAYCAPNHATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYCAPNHATChanged();
    partial void OnSOLUONGTONChanging(System.Nullable<int> value);
    partial void OnSOLUONGTONChanged();
    partial void OnMACDChanging(System.Nullable<int> value);
    partial void OnMACDChanged();
    partial void OnTENCHUDEChanging(string value);
    partial void OnTENCHUDEChanged();
    #endregion
		
		public PHIM()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._KHUYENMAIs = new EntitySet<KHUYENMAI>(new Action<KHUYENMAI>(this.attach_KHUYENMAIs), new Action<KHUYENMAI>(this.detach_KHUYENMAIs));
			this._CHUDE = default(EntityRef<CHUDE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHIM
		{
			get
			{
				return this._MAPHIM;
			}
			set
			{
				if ((this._MAPHIM != value))
				{
					this.OnMAPHIMChanging(value);
					this.SendPropertyChanging();
					this._MAPHIM = value;
					this.SendPropertyChanged("MAPHIM");
					this.OnMAPHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHIM", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENPHIM
		{
			get
			{
				return this._TENPHIM;
			}
			set
			{
				if ((this._TENPHIM != value))
				{
					this.OnTENPHIMChanging(value);
					this.SendPropertyChanging();
					this._TENPHIM = value;
					this.SendPropertyChanged("TENPHIM");
					this.OnTENPHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHU", DbType="NVarChar(100)")]
		public string TENPHU
		{
			get
			{
				return this._TENPHU;
			}
			set
			{
				if ((this._TENPHU != value))
				{
					this.OnTENPHUChanging(value);
					this.SendPropertyChanging();
					this._TENPHU = value;
					this.SendPropertyChanged("TENPHU");
					this.OnTENPHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSX", DbType="NVarChar(MAX)")]
		public string NSX
		{
			get
			{
				return this._NSX;
			}
			set
			{
				if ((this._NSX != value))
				{
					this.OnNSXChanging(value);
					this.SendPropertyChanging();
					this._NSX = value;
					this.SendPropertyChanged("NSX");
					this.OnNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAODIEN", DbType="NVarChar(MAX)")]
		public string DAODIEN
		{
			get
			{
				return this._DAODIEN;
			}
			set
			{
				if ((this._DAODIEN != value))
				{
					this.OnDAODIENChanging(value);
					this.SendPropertyChanging();
					this._DAODIEN = value;
					this.SendPropertyChanged("DAODIEN");
					this.OnDAODIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUOCGIA", DbType="NVarChar(50)")]
		public string QUOCGIA
		{
			get
			{
				return this._QUOCGIA;
			}
			set
			{
				if ((this._QUOCGIA != value))
				{
					this.OnQUOCGIAChanging(value);
					this.SendPropertyChanging();
					this._QUOCGIA = value;
					this.SendPropertyChanged("QUOCGIA");
					this.OnQUOCGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHBIA", DbType="VarChar(50)")]
		public string ANHBIA
		{
			get
			{
				return this._ANHBIA;
			}
			set
			{
				if ((this._ANHBIA != value))
				{
					this.OnANHBIAChanging(value);
					this.SendPropertyChanging();
					this._ANHBIA = value;
					this.SendPropertyChanged("ANHBIA");
					this.OnANHBIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHPHU", DbType="VarChar(50)")]
		public string ANHPHU
		{
			get
			{
				return this._ANHPHU;
			}
			set
			{
				if ((this._ANHPHU != value))
				{
					this.OnANHPHUChanging(value);
					this.SendPropertyChanging();
					this._ANHPHU = value;
					this.SendPropertyChanged("ANHPHU");
					this.OnANHPHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYCAPNHAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYCAPNHAT
		{
			get
			{
				return this._NGAYCAPNHAT;
			}
			set
			{
				if ((this._NGAYCAPNHAT != value))
				{
					this.OnNGAYCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGAYCAPNHAT = value;
					this.SendPropertyChanged("NGAYCAPNHAT");
					this.OnNGAYCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int")]
		public System.Nullable<int> SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACD", DbType="Int")]
		public System.Nullable<int> MACD
		{
			get
			{
				return this._MACD;
			}
			set
			{
				if ((this._MACD != value))
				{
					if (this._CHUDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACDChanging(value);
					this.SendPropertyChanging();
					this._MACD = value;
					this.SendPropertyChanged("MACD");
					this.OnMACDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHUDE", DbType="NVarChar(50)")]
		public string TENCHUDE
		{
			get
			{
				return this._TENCHUDE;
			}
			set
			{
				if ((this._TENCHUDE != value))
				{
					this.OnTENCHUDEChanging(value);
					this.SendPropertyChanging();
					this._TENCHUDE = value;
					this.SendPropertyChanged("TENCHUDE");
					this.OnTENCHUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MAPHIM", OtherKey="MAPHIM")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_KHUYENMAI", Storage="_KHUYENMAIs", ThisKey="MAPHIM", OtherKey="MAPHIM")]
		public EntitySet<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this._KHUYENMAIs;
			}
			set
			{
				this._KHUYENMAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUDE_PHIM", Storage="_CHUDE", ThisKey="MACD", OtherKey="MACD", IsForeignKey=true)]
		public CHUDE CHUDE
		{
			get
			{
				return this._CHUDE.Entity;
			}
			set
			{
				CHUDE previousValue = this._CHUDE.Entity;
				if (((previousValue != value) 
							|| (this._CHUDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUDE.Entity = null;
						previousValue.PHIMs.Remove(this);
					}
					this._CHUDE.Entity = value;
					if ((value != null))
					{
						value.PHIMs.Add(this);
						this._MACD = value.MACD;
					}
					else
					{
						this._MACD = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHUDE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
		
		private void attach_KHUYENMAIs(KHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_KHUYENMAIs(KHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
	}
}
#pragma warning restore 1591
